<?xml version="1.0" ?>
<sdf version="1.6">
  <world name="default">
    
    <!-- Gazebo ROS Factory Plugin for setting model states -->
    <plugin name="gazebo_ros_state" filename="libgazebo_ros_set_pose.so">
      <ros>
        <namespace>/gazebo</namespace>
      </ros>
    </plugin>
    
    <scene>
      <sky>
        <clouds>
          <speed>3</speed>
        </clouds>
      </sky>
    </scene>

    <!-- GUI User Camera -->
    <gui>
      <camera name="user_camera">
        <track_visual>
          <name>robot</name>
        </track_visual>
      </camera>
    </gui>

    <!-- Physics settings -->
    <physics type="ode">
      <ode>
        <solver>
          <type>world</type>
          <iters>100</iters>
          <sor>1.0</sor>
        </solver>
        <constraints>
          <cfm>0.0</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>0.1</contact_max_correcting_vel>
          <contact_surface_layer>0.0</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>400</real_time_update_rate>
      <max_step_size>0.0025</max_step_size>
    </physics>

    <!-- Include Sun Model -->
    <include>
      <uri>model://sun</uri>
    </include>

    <!-- Include House Model -->
    <!-- <include>
      <uri>model://house_3</uri>
      <pose>40 40 0 0 0 0</pose> 
      <size>20000 20000</size>     
    </include> -->
    
    <!-- Include SUV -->
    <include>
      <uri>model://suv</uri>
      <pose>40 0 0 0 0 0</pose> 
      <size>2000 2000</size>     
    </include>

    <include>
    <uri>model://bus</uri>
    <pose>25.286383 10.078934 0  0 0</pose>
    <size>2000 2000</size>
    </include>

    

    <!-- Sphere 6 (Front-Right on Bus Roof) -->
    <model name="sphere_6">
      <static>true</static>
      <pose>26.324884 4.939786 3.430458 0 0 0</pose>
      <link name="sphere_6_link">
        <visual name="sphere_6_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Green Color -->
          <material>
            <ambient>0 1 0 1</ambient>
            <diffuse>0 1 0 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_6_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <!-- Sphere 7 (Back-Left on Bus Roof) -->
    <model name="sphere_7">
      <static>true</static>
      <pose>24.315426 15.731086 3.501861 0 0 0</pose>
      <link name="sphere_7_link">
        <visual name="sphere_7_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Blue Color -->
          <material>
            <ambient>0 0 1 1</ambient>
            <diffuse>0 0 1 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_7_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <!-- Sphere 8 (Back-Right on Bus Roof) -->
    <model name="sphere_8">
      <static>true</static>
      <pose>26.260056 15.945589 3.4388850 0 0</pose>
      <link name="sphere_8_link">
        <visual name="sphere_8_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Yellow Color -->
          <material>
            <ambient>0.5 0 0.5 1</ambient>
            <diffuse>0.5 0 0.5 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_8_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <!-- Sphere Models Around SUV -->
    <model name="sphere_1">
      <static>true</static>
      <pose>40.865 1.0 2.0 0 0 0</pose>
      <link name="sphere_1_link">
        <visual name="sphere_1_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Vibrant Magenta (#FF00FF) -->
          <material>
            <ambient>1 0 1 1</ambient>
            <diffuse>1 0 1 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_1_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <model name="sphere_2">
      <static>true</static>
      <pose>37.8 -1.0 2.07 0 0 0</pose>
      <link name="sphere_2_link">
        <visual name="sphere_2_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Electric Cyan (#00FFFF) -->
          <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_2_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <model name="sphere_3">
      <static>true</static>
      <pose>37.8 1.0 2.07 0 0 0</pose>
      <link name="sphere_3_link">
        <visual name="sphere_3_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Bright Orange-Red -->
          <material>
            <ambient>1 0.27 0 1</ambient>
            <diffuse>1 0.27 0 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_3_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <model name="sphere_4">
      <static>true</static>
      <pose>40.865 -1.0 2.0 0 0 0</pose>
      <link name="sphere_4_link">
        <visual name="sphere_4_visual">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
          <!-- Lemon Yellow (#FFFF00) -->
          <material>
            <ambient>1 1 0 1</ambient>
            <diffuse>1 1 0 1</diffuse>
          </material>
        </visual>
        <collision name="sphere_4_collision">
          <geometry>
            <sphere>
              <radius>0.1</radius>
            </sphere>
          </geometry>
        </collision>
      </link>
    </model>

    <!-- Camera Model with a Box and Sensor -->
    <!-- <model name="standalone_camera">
      <static>true</static>
      <pose>42.75 -1.5 11.5 0 1 2.5</pose>
      <link name="camera_link">
        <visual name="camera_visual">
          <geometry>
            <box>
              <size>1 0.8 0.8</size>
            </box>
          </geometry>
          <material>
            <ambient>0.3 0.3 0.3 1</ambient>
            <diffuse>0.3 0.3 0.3 1</diffuse>
            <specular>0.1 0.1 0.1 1</specular>
          </material>
        </visual>
        <collision name="camera_collision">
          <geometry>
            <box>
              <size>0.2 0.08 0.08</size>
            </box>
          </geometry>
        </collision>
        <sensor name="camera_sensor" type="camera">
          <update_rate>30</update_rate>
          <pose>0.1 0 0 0 0 0</pose>
          <camera>
            <horizontal_fov>1.57</horizontal_fov>
            <image>
              <width>800</width>
              <height>600</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
            <save enabled="true">
              <path>/tmp/images</path>
            </save>
          </camera>
          
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <always_on>true</always_on>
            <ros>
              <namespace>/standalone_camera</namespace>
              <remapping>image_raw:=/standalone_camera/camera_sensor/image_raw</remapping>
            </ros>
          </plugin>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <qos>
              <reliability>best_effort</reliability>
              <durability>volatile</durability>
            </qos>
          </plugin>

          <visualize>true</visualize>
        </sensor>
      </link>
    </model> -->
    <!-- <model name="standalone_camera">
      <static>true</static>
      <pose>42.75 -1.5 11.5 0 1 2.5</pose>
      <link name="camera_link">
        <visual name="camera_visual">
          <geometry>
            <box>
              <size>1 0.8 0.8</size>
            </box>
          </geometry>
          <material>
            <ambient>0.3 0.3 0.3 1</ambient>
            <diffuse>0.3 0.3 0.3 1</diffuse>
            <specular>0.1 0.1 0.1 1</specular>
          </material>
        </visual>
        <collision name="camera_collision">
          <geometry>
            <box>
              <size>0.2 0.08 0.08</size>
            </box>
          </geometry>
        </collision>
        <sensor name="camera_sensor" type="camera">
          <update_rate>30</update_rate>
          <pose>0.1 0 0 0 0 0</pose>
          <camera>
            <horizontal_fov>1.57</horizontal_fov>
            <image>
              <width>800</width>
              <height>600</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
            <save enabled="true">
              <path>/tmp/images</path>
            </save>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <always_on>true</always_on>
            <ros>
              <namespace>/standalone_camera</namespace>
              <remapping>image_raw:=/standalone_camera/camera_sensor/image_raw</remapping>
            </ros>
          </plugin>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <qos>
              <reliability>best_effort</reliability>
              <durability>volatile</durability>
            </qos>
          </plugin>
          <visualize>true</visualize>
        </sensor>
      </link>
    </model> -->
    <!-- Link between camera and ground plane -->
    <!-- <joint name="camera_joint" type="fixed">
      <parent>ground_plane::gound_plane_link</parent>
      <child>standalone_camera::camera_link</child>
    </joint> -->
    <!-- Ground Plane Model -->
    <model name="ground_plane">
      <static>true</static>
      <link name="gound_plane_link">
        <collision name="collision_ground">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0.25</mu>
                <mu2>0.25</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="runway">
          <pose>0 0 0.005 0 0 -1.5707</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>1829 45</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Runway</name>
            </script>
          </material>
        </visual>
        <visual name="grass">
          <pose>0 0 -0.1 0 0 0</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grass</name>
            </script>
          </material>
        </visual>
      </link>
    </model>

  </world>
</sdf>

